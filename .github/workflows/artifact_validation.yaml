name: Artifact validation

on:
  push:
    branches: [ 'main' ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false
  
jobs:
  oqs_validation:
    runs-on: ubuntu-latest
    container: openquantumsafe/oqs-ossl3
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Test artifacts with OQS
      ## TODO -- actually validate the signature on the TA cert; not just import it. 
      ##         replace with `openssl verify -check_ss_sig -CAfile <ca cert> <ee cert>`
        run: ./src/test_certs_r3.sh
      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Compatibility_csv
          path: ./output/
      - name: Overwrite manually-uploaded OQS results with auto-generated ones
        run: ls ./output/certs/
    #     mv -f ./output/certs/* ./providers/oqs/oqsprovider/compatMatrices/artifacts_certs_r3
  # TODO -- include output of previous job in the set of CSVs used by the next job
  #         Should probably remove the manually-generated OQS compatMatrices, and put the results there instead.
  build_results_html:
    runs-on: ubuntu-latest
    container: ubuntu:latest
    needs: oqs_validation
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install packages
        run: | 
          apt-get update && apt-get install -y pandoc lsb-release
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - run: python -m pip install -r src/requirements.txt
      - name: Collect artifacts for download
        uses: actions/download-artifact@v4
        with: 
          name: Compatibility_csv
          path: ./output/
      - name: Build compat matrix
        run: ./src/rebuild_results_certs_r3.sh
      - name: Copy output files
        run: |
           mv ./docs/pqc_hackathon_results_certs_r3.html ./docs/pqc_hackathon_results_cms_v1.html ./docs/toUpload
      - name: Archive Compatibility Matrix For Download
        uses: actions/upload-artifact@v4
        with:
          name: Compatibility-matrix-html
          path: ./docs/toUpload
  # TODO -- need to link up jobs with OUTPUT / INPUT
  publish_to_gh_pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build_results_html
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Get output from last job
        uses: actions/download-artifact@v4
        with:
          name: Compatibility-matrix-html
          path: ./docs/toUpload
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
